##########################
# Setup.py Configuration #
##########################
[metadata]
name = hyper-query-embedding

[options]
install_requires =
    torch
    class_resolver>=0.0.10  # for resolving classes; >=0.0.10 for as_string for click options
    pykeen==1.4.0
    torch_geometric
    click==8.0.1  # for CLI
    dill==0.3.3 # pickle_module
    protobuf==3.14.0

# Where is my code
packages = find:
package_dir =
    = src

[options.packages.find]
where = src

[options.extras_require]
wandb =
    wandb
test =
    flake8
    mypy
    pytest
    unittest-templates==0.0.5
dev =
    ipykernel
rdf =
    requests
    rdflib
    SPRQLwrapper

[options.entry_points]
console_scripts =
    hqe = mphrqe.cli:main

#########################
# Flake8 Configuration  #
# (.flake8)             #
#########################
[flake8]
ignore =
# line too long
    E501

import-order-style = pycharm

application-import-names =
    mphrqe

exclude =
    query_pb2.py

########################
# mypy Configuration   #
# (mypy.ini)           #
########################

[mypy]

[mypy-mphrqe.data.generated.*]
ignore_errors = True

[mypy-class_resolver]
ignore_missing_imports = True

[mypy-dill]
ignore_missing_imports = True

[mypy-google_drive_downloader]
ignore_missing_imports = True

[mypy-matplotlib]
ignore_missing_imports = True

[mypy-pandas]
ignore_missing_imports = True

[mypy-pykeen.*]
ignore_missing_imports = True

[mypy-rdflib.plugins.stores.sparqlstore]
ignore_missing_imports = True

[mypy-scipy.*]
ignore_missing_imports = True

[mypy-torch_geometric.data]
ignore_missing_imports = True

[mypy-torch_scatter]
ignore_missing_imports = True

[mypy-tqdm.*]
ignore_missing_imports = True

[mypy-unittest_templates]
ignore_missing_imports = True

[mypy-wandb]
ignore_missing_imports = True

[mypy-mphrqe.data.query_pb]
ignore_errors = True


########################
# Pytest Configuration #
# (pytest.ini)         #
########################
[tool:pytest]
addopts = --strict-markers
markers =
    full_data: marks tests which require the full data (deselect with '-m "not full_data"')
